//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Peacenet.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Peacenet.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Defines the categories, descriptions, etc of various settings in the game.
        ///
        ///{
        ///	&quot;categories&quot;: [
        ///		{
        ///			&quot;name&quot;: &quot;Audio&quot;,
        ///			&quot;desc&quot;: &quot;Adjust the volume of sound effects/music and change other audio-related settings.&quot;
        ///		},
        ///		{
        ///			&quot;name&quot;: &quot;User experience&quot;,
        ///			&quot;desc&quot;: &quot;Fine-tune The Peacenet&apos;s user interface to suit your preferred user experience.&quot;
        ///		},
        ///		{
        ///			&quot;name&quot;: &quot;Graphics&quot;,
        ///			&quot;desc&quot;: &quot;Adjust the visual appearance of The Peacenet to increase performance and/or usability.&quot;
        ///		},
        ///		{
        ///			&quot;n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsData {
            get {
                return ResourceManager.GetString("SettingsData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //SPOILER ALERT.
        /////
        /////This file defines every single NPC in Peacenet&apos;s single-player campaign. This includes every piece of loot, every story trigger, every set of credentials, everything the game needs to know to have a story.
        /////Long story short (heh): DO NOT PROCEED IF YOU&apos;RE NOT A DEV. YOU&apos;LL RUIN THE FUN OF THE GAME.
        /////
        /////If you are a dev: 
        ///// - Passwords are in plaintext. Use LastPass&apos;s &quot;Generate Secure Password&quot; tool (or a similar tool) to generate passwords that are hard for players to crack. K [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StoryNPCs {
            get {
                return ResourceManager.GetString("StoryNPCs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	{
        ///		&quot;Id&quot;: &quot;medal_value_increase_1&quot;,
        ///		&quot;Name&quot;: &quot;Medal value increase 1&quot;,
        ///		&quot;Description&quot;: &quot;Increases the value of Medals awarded from objectives by 10%.\n\nA medal a day keeps the government at bay.&quot;,
        ///		&quot;MinSkillLevel&quot;: 2,
        ///		&quot;Dependencies&quot;: null
        ///	},
        ///	{
        ///		&quot;Id&quot;: &quot;alert_fast_decay_1&quot;,
        ///		&quot;Name&quot;: &quot;Alert Faster Decay 1&quot;,
        ///		&quot;Description&quot;: &quot;Increase the decay rate of Government Alert by 25%.\n\nBecause sometimes you just have to live on the edge.&quot;,
        ///		&quot;MinSkillLevel&quot;: 5,
        ///		&quot;Dependencies&quot;: null
        ///	},
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Upgrades {
            get {
                return ResourceManager.GetString("Upgrades", resourceCulture);
            }
        }
    }
}
